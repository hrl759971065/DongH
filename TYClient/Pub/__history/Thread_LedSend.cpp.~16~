// ---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Thread_LedSend.h"
#include "Service.h"
#pragma package(smart_init)
// ---------------------------------------------------------------------------

// Important: Methods and properties of objects in VCL can only be
// used in a method called using Synchronize, for example:
//
// Synchronize(&UpdateCaption);
//
// where UpdateCaption could look like:
//
// void __fastcall Thread_LedSend::UpdateCaption()
// {
// Form1->Caption = "Updated in a thread";
// }
// ---------------------------------------------------------------------------

__fastcall Thread_LedSend::Thread_LedSend(bool CreateSuspended)
	: TThread(CreateSuspended) {
	FreeOnTerminate = true;
  	_bFree=false;
  	_bClose=false;
}

// ---------------------------------------------------------------------------
void __fastcall Thread_LedSend::Execute() {
	// ---- Place thread code here ----
	while (!Terminated) {

		if(_bClose){
			this->Terminate();
			_bFree=true;
		}
			   try{
		this->ServiceThread->ProcessRequests(false);

		if (!_bStartup) {

			global_Service.StopServ();
			global_Service.ReadCfg();

			Sleep(500);
			global_Service.CloseReader(0);
			if (global_Service._DevInfo.ReaderInfo[0].Use) {

				Sleep(100);
				if (!global_Service.OpenReader(0)) {

					_File.WriteLog_ErrS(L"读写器连接失败:" + global_Service.GetLastErrS());
				}
			 }
			Sleep(500);

			if (global_Service._connKYC_cfg.IsUse) { // ---Wuwenbin16.4.29新增

				if (!global_Service.ConnKYC()) {
					_File.WriteLog_ErrS
						(L"开元采样机中间库连接失败:" + global_Service.GetLastErrS());
				}
			}

			if (global_Service._connKYZ_cfg.IsUse) { // ---Wuwenbin16.4.29新增

				if (!global_Service.ConnKYZ()) {
					_File.WriteLog_ErrS
						(L"开元制样机中间库连接失败:" + global_Service.GetLastErrS());
				}
			}
			if (global_Service._connHYS_cfg.IsUse) {

				if (!global_Service.ConnHYS()) {
					_File.WriteLog_ErrS
						(L"开元化验室中间库连接失败:" + global_Service.GetLastErrS());
				}
			}
			if (global_Service._connQSY_cfg.IsUse) {

				if (!global_Service.ConnQSY()) {
					_File.WriteLog_ErrS
						(L"全水仪中间库连接失败:" + global_Service.GetLastErrS());
				}
			}
			if (global_Service._connCYG_cfg.IsUse) {

				if (!global_Service.ConnCYG()) {
					_File.WriteLog_ErrS
						(L"存样柜中间库连接失败:" + global_Service.GetLastErrS());
				}
			}
			global_Service.InitSoap(); // ---Wuwenbin16.4.29新增 初始化平台服务接口

			if (global_Service.StartServ()) {

				_bStartup = true; // ---表示启动成功
				_File.WriteLog(L"WebService启动成功!");
			}
			else {
				_File.WriteLog_ErrS(L"WebService启动失败!");
			}

			global_Service._Thr_LedSend->Suspended = false; // ---启动LED控制的线程

		}  		}
			catch(Exception &exception){
			  _File.WriteLog_ErrS(L"Led线程启动失败!");
			}

		::Sleep(100);
		if (global_Service._bEnterCunYG) { // ---haoriliang 16.5.21新增

			global_Service.CunYG_QuY();
		}
		::Sleep(100);
		if (global_Service._bEnterSamUnload) { // ---Wuwenbin16.4.28新增

			global_Service.SamUnloadProc();
		}
        ::Sleep(100);
		Synchronize(&SyncFun_WritePic);
		for (int i = 0; i < global_Service._LedBmp.picNumDD; i++) {
			if(_bClose) break;
			global_Service.SendPicToLedRam(0,
				global_Service._LedBmp._bmDD[i]->Handle, 0, 0,
				global_Service._DevInfo.LedInfo[0].Width,
				global_Service._DevInfo.LedInfo[0].Height);
			Sleep(5000);
		}

		for (int i = 0; i < global_Service._LedBmp.picNumGG; i++) {
            if(_bClose) break;
			global_Service.SendPicToLedRam(0,
				global_Service._LedBmp._bmGG[i]->Handle, 0, 0,
				global_Service._DevInfo.LedInfo[0].Width,
				global_Service._DevInfo.LedInfo[0].Height);
			Sleep(5000);
		}
		Sleep(100);
	}
}

// ---------------------------------------------------------------------------
void __fastcall Thread_LedSend::SyncFun_WritePic() {
	if (global_Service._bSendLED_DDInfo) {

		global_Service.WritePic_DDInfo();
		global_Service._bSendLED_DDInfo = false;
	}
	if (global_Service._bSendLED_GGInfo) {

		global_Service.WritePic_GGInfo();
		global_Service._bSendLED_GGInfo = false;
	}
}
